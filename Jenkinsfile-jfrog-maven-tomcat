pipeline {
    agent any

    tools {
        maven 'Maven-3.9'
    }

    environment {
        ARTIFACTORY = 'Artifactory'
        REPO = 'libs-release-local'
    }
stages{
    stage('Checkout Git') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']], 
                    userRemoteConfigs: [[
                        url: 'https://github.com/anantlaghane/shell-script1.git',
                        credentialsId: 'Git'
                    ]]
                ])
              }
            }

        stage('Build and Upload') {
            when {
                expression { params.ACTION == 'build' }
            }
            steps {
                script {
                    def server = Artifactory.server("${ARTIFACTORY}")
                    def rtMaven = Artifactory.newMavenBuild()
                    rtMaven.tool = 'Maven-3.9'
                    rtMaven.resolver server: server, releaseRepo: 'remote-repos', snapshotRepo: 'remote-repos'
                    rtMaven.deployer server: server, releaseRepo: 'libs-release-local', snapshotRepo: 'libs-snapshot'
                    rtMaven.run pom: 'my_maven/pom.xml', goals: 'clean install'

                    def uploadSpec = """{
                        "files": [
                            {
                                "pattern": "my_maven/target/*.jar",
                                "target": "${REPO}/"
                            }
                        ]
                    }"""
                    server.upload(spec: uploadSpec)
                }
            }
        }

        stage('Deploy to Tomcat') {
            when {
                expression { params.ACTION == 'deploy' }
            }
            steps {
                echo "Deploying ${params.APP_NAME} to ${params.DEPLOY_ENV} environment"
                sh """
                curl -T target/*.war "http://admin:Anant@123@localhost:8085/manager/text/deploy?path=/sample&update=true"

                """
            }
        }
    }
}