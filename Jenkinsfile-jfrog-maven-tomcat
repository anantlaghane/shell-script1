pipeline {
    agent any


    tools {
        maven 'Maven-3.9'
    }

    environment {
        ARTIFACTORY = 'Artifactory'
        REPO = 'libs-release-local'
    }
    parameters {
    choice(name: 'ACTION', choices: ['build', 'deploy'], description: 'Choose action')
    string(name: 'APP_NAME', defaultValue: 'sample', description: 'App name to deploy')
    choice(name: 'DEPLOY_ENV', choices: ['dev', 'prod'], description: 'Deployment environment')
}

stages{
    stage('Checkout Git') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']], 
                    userRemoteConfigs: [[
                        url: 'https://github.com/anantlaghane/shell-script1.git',
                        credentialsId: 'Git'
                    ]]
                ])
              }
            }

        stage('Build and Upload') {
            when {
                expression { params.ACTION == 'build' }
            }
            steps {
                script {
                    def server = Artifactory.server("${ARTIFACTORY}")
                    def rtMaven = Artifactory.newMavenBuild()
                    rtMaven.tool = 'Maven-3.9'
                    rtMaven.resolver server: server, releaseRepo: 'maven', snapshotRepo: 'maven'
                    rtMaven.deployer server: server, releaseRepo: 'libs-release-local', snapshotRepo: 'libs-release-local'
                    //rtMaven.run pom: 'my_maven/pom.xml', goals: 'clean install'
                    sh 'cd my_maven && mvn clean package'


                    def uploadSpec = """{
                        "files": [
                            {
                                "pattern": "my_maven/target/*.jar",
                                "target": "${REPO}/"
                            }
                        ]
                    }"""
                    server.upload(spec: uploadSpec)
                }
            }
        }

     stage('Deploy to Tomcat') {
    when {
        expression { params.ACTION == 'deploy' }
    }
    steps {
        echo "ACTION: ${params.ACTION}"
        echo "APP_NAME: ${params.APP_NAME}"
        echo "DEPLOY_ENV: ${params.DEPLOY_ENV}"
        echo "Deploying ${params.APP_NAME} to ${params.DEPLOY_ENV} environment"
        sh """
        curl -v -u admin:Anant@123 -T my_maven/target/${params.APP_NAME}.jar \\
          "http://localhost:8080/manager/text/deploy?path=/${params.APP_NAME}&update=true"
        """
    }
}


    }
}